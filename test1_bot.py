import telebot
from telebot import types
import requests
import os
from dotenv import load_dotenv
import json

load_dotenv()

TOKEN = os.getenv("TELEGRAM_TOKEN")  # –•—Ä–∞–Ω–∏ —Ç–æ–∫–µ–Ω –≤ .env
WEATHER_API_KEY = os.getenv("WEATHER_API_KEY")
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

bot = telebot.TeleBot(TOKEN)

user_states = {}  # user_id -> state ('menu' –∏–ª–∏ 'chat_with_ai')


def query_openrouter(prompt):
    url = "https://openrouter.ai/api/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "http://localhost",  # –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ª—é–±–æ–π —Å–∞–π—Ç
        "X-Title": "TelegramBot"
    }
    data = {
        "model": "deepseek/deepseek-chat",
        "messages": [
            {"role": "user", "content": prompt}
        ]
    }
    try:
        response = requests.post(url, headers=headers, data=json.dumps(data))
        if response.status_code == 200:
            return response.json()['choices'][0]['message']['content']
        else:
            print("OpenRouter Error:", response.status_code, response.text)
            return "–ò–∑–≤–∏–Ω–∏, —Å–µ–π—á–∞—Å –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å."
    except Exception as e:
        print("–û—à–∏–±–∫–∞ OpenRouter:", e)
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AI."


def get_weather():
    url = f"https://api.openweathermap.org/data/2.5/weather?q=Kokshetau&appid={WEATHER_API_KEY}&units=metric&lang=ru"
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        temp = data["main"]["temp"]
        feels_like = data["main"]["feels_like"]
        description = data["weather"][0]["description"]
        return f"üå§ –°–µ–π—á–∞—Å –≤ –ö–æ–∫—à–µ—Ç–∞—É: {temp}¬∞C, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C.\n–û–ø–∏—Å–∞–Ω–∏–µ: {description}"
    else:
        return "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ."


def send_main_menu(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–û —Å–æ–∑–¥–∞—Ç–µ–ª–µ")
    btn2 = types.KeyboardButton("–≥–¥–µ —Ç—ã?")
    btn3 = types.KeyboardButton("–ü–æ–≥–æ–¥–∞ –≤ –ö–æ–∫—à–µ—Ç–∞—É")
    btn4 = types.KeyboardButton("–ü–æ–±–æ–ª—Ç–∞—Ç—å —Å AI")
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(chat_id, "–¥–∞ –ê–Ω–∏–∫–æ—à–∞?", reply_markup=markup)


@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_states[message.from_user.id] = 'menu'
    send_main_menu(message.chat.id)


@bot.message_handler(func=lambda message: True)
def handle_all(message):
    user_id = message.from_user.id
    text = message.text
    state = user_states.get(user_id, 'menu')

    if state == 'menu':
        if text == "–û —Å–æ–∑–¥–∞—Ç–µ–ª–µ":
            bot.send_message(message.chat.id, "—Ç–≤–æ–π –ø—Ä–∏–Ω—Ü –∂–µ üôÑ‚ù§Ô∏è")
        elif text == "–≥–¥–µ —Ç—ã?":
            bot.send_message(message.chat.id, "–≤ —Ç–≤–æ–µ–º —Å–µ—Ä–¥—Ü–µ <3")
        elif text == "–ü–æ–≥–æ–¥–∞ –≤ –ö–æ–∫—à–µ—Ç–∞—É":
            weather_info = get_weather()
            bot.send_message(message.chat.id, weather_info)
        elif text == "–ü–æ–±–æ–ª—Ç–∞—Ç—å —Å AI":
            user_states[user_id] = 'chat_with_ai'
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_exit = types.KeyboardButton("–í—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞ —Å AI")
            markup.add(btn_exit)
            bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ü–∏—à–∏ —á—Ç–æ —É–≥–æ–¥–Ω–æ, —è ‚Äî –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ –ª–∏—Ü–æ mr. Bekezhan. \n–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, f"{text}?")
    elif state == 'chat_with_ai':
        if text == "–í—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞ —Å AI":
            user_states[user_id] = 'menu'
            send_main_menu(message.chat.id)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            answer = query_openrouter(text)
            bot.send_message(message.chat.id, answer)


print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
bot.polling()
